{"version":3,"file":"index.js","sources":["../src/components/ToolbarButton.tsx","../src/utils.ts","../src/components/Toolbar.tsx","../src/components/Link.tsx","../src/components/Media.tsx","../src/components/Blockquote.tsx","../src/components/CodeBlock.tsx","../src/components/UrlPopover.tsx","../src/components/Autocomplete.tsx","../src/MUIRichTextEditor.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport { TToolbarComponentProps, TToolbarButtonSize } from './Toolbar'\n\ninterface IToolbarButtonProps {\n    id?: string\n    editorId?: string\n    label: string\n    style: string\n    type: string\n    active?: boolean\n    icon?: JSX.Element\n    onClick?: any\n    inlineMode?: boolean\n    disabled?: boolean\n    size?: TToolbarButtonSize\n    component?: FunctionComponent<TToolbarComponentProps>\n}\n\nconst ToolbarButton: FunctionComponent<IToolbarButtonProps> = (props) => {\n    const size = !props.inlineMode ? (props.size || \"medium\") : \"small\"\n    const toolbarId = props.inlineMode ? \"-toolbar\" : \"\"\n    const editorId = props.editorId || \"mui-rte\"\n    const elemId = editorId + \"-\" + (props.id || props.label) + \"-button\" + toolbarId\n    const sharedProps = {\n        id: elemId,\n        onMouseDown: (e: React.MouseEvent) => {\n            e.preventDefault()\n            if (props.onClick) {\n                props.onClick(props.style, props.type, elemId, props.inlineMode)\n            }\n        },\n        disabled: props.disabled || false\n    }\n    if (props.icon) {\n        return (\n            <IconButton\n                {...sharedProps}\n                aria-label={props.label}\n                color={props.active ? \"primary\" : \"default\"}\n                size={size}\n            >\n                {props.icon}\n            </IconButton>\n        )\n    }\n    if (props.component) {\n        return (\n            <props.component\n                {...sharedProps}\n                active={props.active || false}\n            />\n        )\n    }\n    return null\n}\n\nexport default ToolbarButton\n","import {\n    EditorState, DraftBlockType, ContentBlock, ContentState,\n    Modifier, SelectionState, getVisibleSelectionRect, DraftStyleMap\n} from 'draft-js'\nimport Immutable from 'immutable'\nimport { TCustomControl } from './components/Toolbar'\n\nexport type TPosition = {\n    top: number\n    left: number\n}\n\nexport type TSelectionInfo = {\n    inlineStyle: Immutable.OrderedSet<string>,\n    blockType: DraftBlockType,\n    entityType: string,\n    linkKey: string\n    block: ContentBlock\n}\n\n/**\n * Get the current selection details\n */\nconst getSelectionInfo = (editorState: EditorState): TSelectionInfo => {\n    const selection = editorState.getSelection()\n    const startOffset = selection.getStartOffset()\n    const currentContent = editorState.getCurrentContent()\n    const contentBlock = currentContent.getBlockForKey(selection.getStartKey())\n    const currentStyle = editorState.getCurrentInlineStyle()\n    const linkKey = contentBlock.getEntityAt(startOffset)\n    let entityType = \"\"\n    if (linkKey) {\n        const linkInstance = currentContent.getEntity(linkKey)\n        entityType = linkInstance.getType()\n    }\n    return {\n        inlineStyle: currentStyle,\n        blockType: contentBlock.getType(),\n        entityType: entityType,\n        linkKey: linkKey,\n        block: contentBlock\n    }\n}\n\n/**\n * Remove a block from the ContentState\n */\nconst removeBlockFromMap = (editorState: EditorState, block: ContentBlock): ContentState => {\n    const contentState = editorState.getCurrentContent()\n    const removeBlockContentState = Modifier.removeRange(\n        contentState,\n        new SelectionState({\n            anchorKey: block.getKey(),\n            anchorOffset: 0,\n            focusKey: block.getKey(),\n            focusOffset: block.getLength(),\n        }),\n        'backward'\n    )\n    const blockMap = removeBlockContentState.getBlockMap().delete(block.getKey())\n    return removeBlockContentState.merge({\n        blockMap,\n        selectionAfter: contentState.getSelectionAfter()\n    }) as ContentState\n}\n\nconst atomicBlockExists = (name: string, controls?: TCustomControl[]) => {\n    if (!controls) {\n        return undefined\n    }\n    return controls.find(control =>\n        control.type === \"atomic\" &&\n        control.name === name &&\n        control.atomicComponent !== undefined)\n}\n\nconst isGreaterThan = (value: number, maxValue?: number): boolean => {\n    if (!maxValue) {\n        return false\n    }\n    return value > maxValue\n}\n\nconst clearInlineStyles = (editorState: EditorState, customStyles?: DraftStyleMap): ContentState => {\n    let styles = ['BOLD', 'ITALIC', 'UNDERLINE']\n    if (customStyles) {\n        styles = styles.concat(Object.getOwnPropertyNames(customStyles))\n    }\n    return styles.reduce((newContentState: ContentState, style: string) => (\n        Modifier.removeInlineStyle(newContentState, editorState.getSelection(), style)\n    ), editorState.getCurrentContent())\n}\n\nconst getEditorBounds = (editor: HTMLElement) => {\n    let fakeClientRect = getVisibleSelectionRect(window)\n    return {\n        selectionRect: fakeClientRect ? {\n            top: fakeClientRect?.top,\n            left: fakeClientRect?.left\n        } as TPosition : null,\n        editorRect: editor.getBoundingClientRect()\n    }\n}\n\nconst getLineNumber = (editorState: EditorState) => {\n    const currentBlockKey = editorState.getSelection().getStartKey()\n    return editorState.getCurrentContent().getBlockMap()\n        .keySeq().findIndex(k => k === currentBlockKey)\n}\n\nexport { getSelectionInfo, removeBlockFromMap, atomicBlockExists, isGreaterThan, clearInlineStyles, getEditorBounds, getLineNumber }\n","import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { EditorState } from 'draft-js'\nimport FormatBoldIcon from '@material-ui/icons/FormatBold'\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic'\nimport FormatUnderlinedIcon from '@material-ui/icons/FormatUnderlined'\nimport StrikethroughIcon from '@material-ui/icons/StrikethroughS'\nimport HighlightIcon from '@material-ui/icons/Highlight'\nimport TitleIcon from '@material-ui/icons/Title'\nimport InsertLinkIcon from '@material-ui/icons/InsertLink'\nimport PhotoLibraryIcon from '@material-ui/icons/PhotoLibrary'\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered'\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted'\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote'\nimport CodeIcon from '@material-ui/icons/Code'\nimport FormatClearIcon from '@material-ui/icons/FormatClear'\nimport SaveIcon from '@material-ui/icons/Save'\nimport UndoIcon from '@material-ui/icons/Undo'\nimport RedoIcon from '@material-ui/icons/Redo'\nimport ToolbarButton from './ToolbarButton'\nimport { getSelectionInfo } from '../utils'\n\nexport type TToolbarControl =\n    \"title\" | \"bold\" | \"italic\" | \"underline\" | \"link\" | \"numberList\" |\n    \"bulletList\" | \"quote\" | \"code\" | \"clear\" | \"save\" | \"media\" |\n    \"strikethrough\" | \"highlight\" | string\n\nexport type TControlType = \"inline\" | \"block\" | \"callback\" | \"atomic\"\n\nexport type TToolbarButtonSize = \"small\" | \"medium\"\n\nexport type TToolbarComponentProps = {\n    id: string,\n    onMouseDown: (e: React.MouseEvent) => void,\n    active: boolean,\n    disabled: boolean\n}\n\nexport type TCustomControl = {\n    id?: string\n    name: string\n    icon?: JSX.Element\n    type: TControlType\n    component?: FunctionComponent<TToolbarComponentProps>\n    inlineStyle?: React.CSSProperties\n    blockWrapper?: React.ReactElement\n    atomicComponent?: FunctionComponent\n    onClick?: (editorState: EditorState, name: string, anchor: HTMLElement | null) => EditorState | void\n}\n\ntype TStyleType = {\n    id?: string\n    name: TToolbarControl | string\n    label: string\n    style: string\n    icon?: JSX.Element\n    component?: FunctionComponent<TToolbarComponentProps>\n    type: TControlType\n    active?: boolean\n    clickFnName?: string\n}\n\ntype TToolbarProps = {\n    id: string\n    editorState: EditorState\n    controls?: Array<TToolbarControl>\n    customControls?: TCustomControl[]\n    onClick: (style: string, type: string, id: string, inlineMode?: boolean) => void\n    inlineMode?: boolean\n    className?: string\n    disabled?: boolean\n    size?: TToolbarButtonSize\n    isActive: boolean\n}\n\nconst STYLE_TYPES: TStyleType[] = [\n    {\n        label: 'H2',\n        name: \"title\",\n        style: 'header-two',\n        icon: <TitleIcon />,\n        type: \"block\"\n    },\n    {\n        label: 'Bold',\n        name: \"bold\",\n        style: 'BOLD',\n        icon: <FormatBoldIcon />,\n        type: \"inline\"\n    },\n    {\n        label: 'Italic',\n        name: \"italic\",\n        style: 'ITALIC',\n        icon: <FormatItalicIcon />,\n        type: \"inline\"\n    },\n    {\n        label: 'Underline',\n        name: \"underline\",\n        style: 'UNDERLINE',\n        icon: <FormatUnderlinedIcon />,\n        type: \"inline\"\n    },\n    {\n        label: 'Strikethrough',\n        name: \"strikethrough\",\n        style: 'STRIKETHROUGH',\n        icon: <StrikethroughIcon />,\n        type: \"inline\"\n    },\n    {\n        label: 'Highlight',\n        name: \"highlight\",\n        style: 'HIGHLIGHT',\n        icon: <HighlightIcon />,\n        type: \"inline\"\n    },\n    {\n        label: 'Undo',\n        name: \"undo\",\n        style: \"UNDO\",\n        icon: <UndoIcon />,\n        type: \"callback\",\n    },\n    {\n        label: 'Redo',\n        name: \"redo\",\n        style: \"REDO\",\n        icon: <RedoIcon />,\n        type: \"callback\",\n    },\n    {\n        label: 'Link',\n        name: \"link\",\n        style: 'LINK',\n        icon: <InsertLinkIcon />,\n        type: \"callback\",\n        id: \"link-control\"\n    },\n    {\n        label: 'Media',\n        name: \"media\",\n        style: 'IMAGE',\n        icon: <PhotoLibraryIcon />,\n        type: \"callback\",\n        id: \"media-control\"\n    },\n    {\n        label: 'UL',\n        name: \"bulletList\",\n        style: 'unordered-list-item',\n        icon: <FormatListBulletedIcon />,\n        type: \"block\"\n    },\n    {\n        label: 'OL',\n        name: \"numberList\",\n        style: 'ordered-list-item',\n        icon: <FormatListNumberedIcon />,\n        type: \"block\"\n    },\n    {\n        label: 'Blockquote',\n        name: \"quote\",\n        style: 'blockquote',\n        icon: <FormatQuoteIcon />,\n        type: \"block\"\n    },\n    {\n        label: 'Code Block',\n        name: \"code\",\n        style: 'code-block',\n        icon: <CodeIcon />,\n        type: \"block\"\n    },\n    {\n        label: 'Clear',\n        name: \"clear\",\n        style: 'clear',\n        icon: <FormatClearIcon />,\n        type: \"callback\"\n    },\n    {\n        label: 'Save',\n        name: \"save\",\n        style: 'save',\n        icon: <SaveIcon />,\n        type: \"callback\"\n    }\n]\n\nconst Toolbar: FunctionComponent<TToolbarProps> = (props) => {\n    const [availableControls, setAvailableControls] = useState(props.controls ? [] : STYLE_TYPES)\n    const { editorState } = props\n    const id = props.inlineMode ? \"-inline-toolbar\" : \"-toolbar\"\n\n    useEffect(() => {\n        if (!props.controls) {\n            return\n        }\n        const filteredControls: TStyleType[] = []\n        const controls = props.controls.filter((control, index) => props.controls!.indexOf(control) >= index)\n        controls.forEach(name => {\n            const style = STYLE_TYPES.find(style => style.name === name)\n            if (style) {\n                filteredControls.push(style)\n            }\n            else if (props.customControls) {\n                const customControl = props.customControls.find(style => style.name === name)\n                if (customControl && customControl.type !== \"atomic\" &&\n                    (customControl.icon || customControl.component)) {\n                    filteredControls.push({\n                        id: customControl.id || (customControl.name + \"Id\"),\n                        name: customControl.name,\n                        label: customControl.name,\n                        style: customControl.name.toUpperCase(),\n                        icon: customControl.icon,\n                        component: customControl.component,\n                        type: customControl.type,\n                        clickFnName: \"onCustomClick\"\n                    })\n                }\n            }\n        })\n        setAvailableControls(filteredControls)\n    }, [props.controls, props.customControls])\n\n    return (\n        <div id={`${props.id}${id}`} className={props.className}>\n            {availableControls.map(style => {\n                if (props.inlineMode &&\n                    (style.type !== \"inline\" && (style.name !== \"link\" && style.name !== \"clear\"))) {\n                    return null\n                }\n                let active = false\n                const action = props.onClick\n                if (!props.isActive) {\n                    active = false\n                }\n                else if (style.type === \"inline\") {\n                    active = editorState.getCurrentInlineStyle().has(style.style)\n                }\n                else if (style.type === \"block\") {\n                    const selection = editorState.getSelection()\n                    const block = editorState.getCurrentContent().getBlockForKey(selection.getStartKey())\n                    if (block) {\n                        active = style.style === block.getType()\n                    }\n                }\n                else {\n                    if (style.style === \"IMAGE\" || style.style === \"LINK\") {\n                        active = style.style === getSelectionInfo(editorState).entityType\n                    }\n                }\n\n                return (\n                    <ToolbarButton\n                        id={style.id}\n                        editorId={props.id}\n                        key={`key-${style.label}`}\n                        active={active}\n                        label={style.label}\n                        onClick={action}\n                        style={style.style}\n                        type={style.type}\n                        icon={style.icon}\n                        component={style.component}\n                        inlineMode={props.inlineMode}\n                        disabled={props.disabled}\n                        size={props.size}\n                    />\n                )\n            })}\n        </div>\n    )\n}\nexport default Toolbar\n","import React, { FunctionComponent } from 'react'\nimport { ContentState } from 'draft-js'\nimport MuiLink from '@material-ui/core/Link'\n\ntype TLinkProps = {\n    children?: React.ReactNode\n    contentState: ContentState\n    entityKey: string\n}\n\nconst Link: FunctionComponent<TLinkProps> = (props) => {\n    const { url, className } = props.contentState.getEntity(props.entityKey).getData()\n    return (\n        <MuiLink\n            href={url}\n            className={`${className} editor-anchor`}\n            target=\"_blank\"\n        >\n            {props.children}\n        </MuiLink>\n    )\n}\n\nexport default Link\n","import React, { FunctionComponent } from 'react'\nimport classNames from 'classnames'\nimport { ContentState, ContentBlock } from 'draft-js'\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles'\n\ninterface IMediaProps extends WithStyles<typeof styles> {\n    block: ContentBlock\n    contentState: ContentState\n    blockProps: any\n    onClick: (block: ContentBlock) => void\n}\n\nconst styles = ({ shadows }: Theme) => createStyles({\n    root: {\n        margin: \"5px 0 1px\",\n        outline: \"none\"\n    },\n    editable: {\n        cursor: \"pointer\",\n        \"&:hover\": {\n            boxShadow: shadows[3]\n        }\n    },\n    focused: {\n        boxShadow: shadows[3]\n    },\n    centered: {\n        textAlign: \"center\"\n    },\n    leftAligned: {\n        textAlign: \"left\"\n    },\n    rightAligned: {\n        textAlign: \"right\"\n    }\n})\n\nconst Media: FunctionComponent<IMediaProps> = (props) => {\n    const { url, width, height, alignment, type } = props.contentState.getEntity(props.block.getEntityAt(0)).getData()\n    const { onClick, readOnly, focusKey } = props.blockProps\n\n    const htmlTag = () => {\n        const componentProps = {\n            src: url,\n            className: classNames(props.classes.root, {\n                [props.classes.editable]: !readOnly,\n                [props.classes.focused]: !readOnly && focusKey === props.block.getKey()\n            }),\n            width: width,\n            height: type === \"video\" ? \"auto\" : height,\n            onClick: () => {\n                if (readOnly) {\n                    return\n                }\n                onClick(props.block)\n            }\n        }\n\n        if (!type || type === \"image\") {\n            return <img {...componentProps} />\n        }\n        if (type === \"video\") {\n            return <video {...componentProps} autoPlay={false} controls />\n        }\n        return null\n    }\n\n    return (\n        <div className={classNames({\n            [props.classes.centered]: alignment === \"center\",\n            [props.classes.leftAligned]: alignment === \"left\",\n            [props.classes.rightAligned]: alignment === \"right\"\n        })}>\n            {htmlTag()}\n        </div>\n    )\n}\n\nexport default withStyles(styles, { withTheme: true })(Media)\n","import React, { FunctionComponent } from 'react'\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles'\n\nconst styles = ({ palette }: Theme) => createStyles({\n    root: {\n        fontStyle: \"italic\",\n        color: palette.grey[800],\n        borderLeft: `4px solid ${palette.grey.A100}`\n    }\n})\n\ninterface IBlockquoteProps extends WithStyles<typeof styles> {\n    children?: React.ReactNode\n}\n\nconst Blockquote: FunctionComponent<IBlockquoteProps> = (props) => {\n    return (\n        <div className={props.classes.root}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default withStyles(styles, { withTheme: true })(Blockquote)\n","import React, { FunctionComponent } from 'react'\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles'\n\nconst styles = ({ spacing, palette }: Theme) => createStyles({\n    root: {\n        backgroundColor: palette.grey[200],\n        padding: spacing(1, 2, 1, 2)\n    }\n})\n\ninterface IBlockquoteProps extends WithStyles<typeof styles> {\n    children?: React.ReactNode\n}\n\nconst CodeBlock: FunctionComponent<IBlockquoteProps> = (props) => {\n    return (\n        <div className={props.classes.root}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default withStyles(styles, { withTheme: true })(CodeBlock)\n","import React, { FunctionComponent, useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Popover from '@material-ui/core/Popover'\nimport TextField from '@material-ui/core/TextField'\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport InsertPhotoIcon from '@material-ui/icons/InsertPhoto'\nimport MovieIcon from '@material-ui/icons/Movie'\nimport CheckIcon from '@material-ui/icons/Check'\nimport DeleteIcon from '@material-ui/icons/DeleteOutline'\nimport FormatAlignCenter from '@material-ui/icons/FormatAlignCenter'\nimport FormatAlignLeft from '@material-ui/icons/FormatAlignLeft'\nimport FormatAlignRight from '@material-ui/icons/FormatAlignRight'\n\nexport type TAlignment = \"left\" | \"center\" | \"right\"\n\nexport type TMediaType = \"image\" | \"video\"\n\nexport type TUrlData = {\n    url?: string\n    width?: number\n    height?: number\n    alignment?: TAlignment\n    type?: TMediaType\n}\n\ninterface IUrlPopoverStateProps extends WithStyles<typeof styles> {\n    anchor?: HTMLElement\n    data?: TUrlData\n    isMedia?: boolean\n    onConfirm: (isMedia?: boolean, ...args: any) => void\n}\n\nconst styles = ({ spacing }: Theme) => createStyles({\n    linkPopover: {\n        padding: spacing(2, 2, 2, 2),\n        maxWidth: 250\n    },\n    linkTextField: {\n        width: \"100%\"\n    }\n})\n\nconst UrlPopover: FunctionComponent<IUrlPopoverStateProps> = (props) => {\n    const [data, setData] = useState<TUrlData>(props.data || {\n        url: undefined,\n        width: undefined,\n        height: undefined,\n        alignment: undefined,\n        type: undefined\n    })\n\n    const { classes } = props\n\n    const onSizeChange = (value: any, prop: \"width\" | \"height\") => {\n        if (value === \"\") {\n            setData({ ...data, [prop]: undefined })\n            return\n        }\n        const intValue = parseInt(value, 10)\n        if (isNaN(intValue)) {\n            return\n        }\n        setData({ ...data, [prop]: intValue })\n    }\n\n    return (\n        <Popover\n            open={props.anchor !== undefined}\n            anchorEl={props.anchor}\n            anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\"\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n            }}\n        >\n            <div className={classes.linkPopover}>\n                <Grid container spacing={1}>\n                    <Grid container item xs spacing={1}>\n                        <Grid item xs={12}>\n                            <TextField\n                                className={classes.linkTextField}\n                                onChange={(event) => setData({...data, url: event.target.value})}\n                                label=\"URL\"\n                                defaultValue={props.data && props.data.url}\n                                autoFocus={true}\n                                InputLabelProps={{\n                                    shrink: true\n                                }}\n                            />\n                        </Grid>\n                        {props.isMedia ?\n                            <>\n                                <Grid item xs={12}>\n                                    <ButtonGroup fullWidth>\n                                        <Button \n                                            color={(!data.type || data.type === \"image\") ? \"primary\" : \"default\"} \n                                            size=\"small\" \n                                            onClick={() => setData({...data, type: \"image\"})}\n                                        >\n                                            <InsertPhotoIcon />\n                                        </Button>\n                                        <Button \n                                            color={data.type === \"video\" ? \"primary\" : \"default\"} \n                                            size=\"small\" \n                                            onClick={() => setData({...data, type: \"video\"})}\n                                        >\n                                            <MovieIcon />\n                                        </Button>\n                                    </ButtonGroup>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <TextField\n                                        onChange={(event) => onSizeChange(event.target.value, \"width\")}\n                                        value={data.width || \"\"}\n                                        label=\"Width\"\n                                        InputLabelProps={{\n                                            shrink: true\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <TextField\n                                        onChange={(event) => onSizeChange(event.target.value, \"height\")}\n                                        value={data.height || \"\"}\n                                        label=\"Height\"\n                                        InputLabelProps={{\n                                            shrink: true\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <ButtonGroup fullWidth>\n                                        <Button \n                                            color={data.alignment === \"left\" ? \"primary\" : \"default\"} \n                                            size=\"small\" \n                                            onClick={() => setData({...data, alignment: \"left\"})}\n                                        >\n                                            <FormatAlignLeft />\n                                        </Button>\n                                        <Button \n                                            color={data.alignment === \"center\" ? \"primary\" : \"default\"} \n                                            size=\"small\" \n                                            onClick={() => setData({...data, alignment: \"center\"})}\n                                        >\n                                            <FormatAlignCenter />\n                                        </Button>\n                                        <Button \n                                            color={data.alignment === \"right\" ? \"primary\" : \"default\"} \n                                            size=\"small\" \n                                            onClick={() => setData({...data, alignment: \"right\"})}>\n                                            <FormatAlignRight />\n                                        </Button>\n                                    </ButtonGroup>\n                                </Grid>\n                            </>\n                            : null}\n                    </Grid>\n                    <Grid container item xs={12} direction=\"row\" justify=\"flex-end\">\n                        {props.data && props.data.url ?\n                        <Button\n                            onClick={() => props.onConfirm(props.isMedia, \"\")}\n                        >\n                            <DeleteIcon />\n                        </Button>\n                        : null }\n                        <Button\n                            onClick={() => props.onConfirm(props.isMedia, data.url, data.width, data.height, data.alignment, data.type)}\n                        >\n                            <CheckIcon />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        </Popover>\n    )\n}\n\nexport default withStyles(styles, { withTheme: true })(UrlPopover)\n","import React, { FunctionComponent } from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport { createStyles, withStyles, WithStyles } from '@material-ui/core/styles'\n\nexport type TAutocompleteItem = {\n    keys: string[]\n    value: any\n    content: string | JSX.Element\n}\n\ninterface TAutocompleteProps extends WithStyles<typeof styles> {\n    items: TAutocompleteItem[]\n    top: number\n    left: number\n    selectedIndex: number\n    onClick: (selectedIndex: number) => void\n}\n\nconst styles = () => createStyles({\n    container: {\n        minWidth: \"200px\",\n        position: \"absolute\",\n        zIndex: 10\n    },\n    item: {\n        cursor: \"pointer\"\n    }\n})\n\nconst Autocomplete: FunctionComponent<TAutocompleteProps> = (props) => {\n    if (!props.items.length) {\n        return null\n    }\n\n    const { classes } = props\n    return (\n        <Paper className={classes.container} style={{\n            top: props.top,\n            left: props.left\n        }}>\n            <List dense={true}>\n                {props.items.map((item, index) => (\n                    <ListItem\n                        key={index}\n                        className={classes.item}\n                        selected={index === props.selectedIndex}\n                        onClick={() => props.onClick(index)}\n                    >\n                        {item.content}\n                    </ListItem>\n                ))}\n            </List>\n        </Paper>\n    )\n}\n\nexport default withStyles(styles, { withTheme: true })(Autocomplete)\n","import React, {\n    FunctionComponent, useEffect, useState, useRef,\n    forwardRef, useImperativeHandle, RefForwardingComponent\n} from 'react'\nimport Immutable from 'immutable'\nimport classNames from 'classnames'\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport {\n    Editor, EditorState, convertFromRaw, RichUtils, AtomicBlockUtils,\n    CompositeDecorator, convertToRaw, DefaultDraftBlockRenderMap, DraftEditorCommand,\n    DraftHandleValue, DraftStyleMap, ContentBlock, DraftDecorator,\n    SelectionState, KeyBindingUtil, getDefaultKeyBinding, Modifier, DraftBlockRenderMap\n} from 'draft-js'\nimport Toolbar, { TToolbarControl, TCustomControl, TToolbarButtonSize } from './components/Toolbar'\nimport Link from './components/Link'\nimport Media from './components/Media'\nimport Blockquote from './components/Blockquote'\nimport CodeBlock from './components/CodeBlock'\nimport UrlPopover, { TAlignment, TUrlData, TMediaType } from './components/UrlPopover'\nimport Autocomplete, { TAutocompleteItem } from './components/Autocomplete'\nimport { getSelectionInfo, removeBlockFromMap, atomicBlockExists, isGreaterThan, clearInlineStyles, getEditorBounds, getLineNumber, TPosition } from './utils'\n\nexport type TDecorator = {\n    component: FunctionComponent\n    regex: RegExp\n}\n\nexport type TAutocompleteStrategy = {\n    triggerChar: string\n    items: TAutocompleteItem[]\n    insertSpaceAfter?: boolean\n    atomicBlockName?: string\n}\n\nexport type TAutocomplete = {\n    strategies: TAutocompleteStrategy[]\n    suggestLimit?: number\n}\n\nexport type TAsyncAtomicBlockResponse = {\n    data: any\n}\n\nexport type TMUIRichTextEditorRef = {\n    focus: () => void\n    save: () => void\n    /**\n     * @deprecated Use `insertAtomicBlockSync` instead.\n     */\n    insertAtomicBlock: (name: string, data: any) => void\n    insertAtomicBlockSync: (name: string, data: any) => void\n    insertAtomicBlockAsync: (name: string, promise: Promise<TAsyncAtomicBlockResponse>, placeholder?: string) => void\n}\n\nexport type TDraftEditorProps = {\n    spellCheck?: boolean\n    stripPastedStyles?: boolean\n    handleDroppedFiles?: (selectionState: SelectionState, files: Blob[]) => DraftHandleValue\n}\n\nexport type TKeyCommand = {\n    key: number\n    name: string\n    callback: (state: EditorState) => EditorState\n}\n\nexport type TMUIRichTextEditorProps = {\n    id?: string\n    /**\n     * @deprecated Use `defaultValue` instead.\n     */\n    value?: any\n    defaultValue?: any\n    label?: string\n    readOnly?: boolean\n    inheritFontSize?: boolean\n    error?: boolean\n    controls?: Array<TToolbarControl>\n    customControls?: TCustomControl[]\n    decorators?: TDecorator[]\n    toolbar?: boolean\n    toolbarButtonSize?: TToolbarButtonSize\n    inlineToolbar?: boolean\n    inlineToolbarControls?: Array<TToolbarControl>\n    draftEditorProps?: TDraftEditorProps\n    keyCommands?: TKeyCommand[]\n    maxLength?: number\n    autocomplete?: TAutocomplete\n    onSave?: (data: string) => void\n    onChange?: (state: EditorState) => void\n    onFocus?: () => void\n    onBlur?: () => void\n}\n\ninterface IMUIRichTextEditorProps extends TMUIRichTextEditorProps, WithStyles<typeof styles> { }\n\ntype TMUIRichTextEditorState = {\n    anchorUrlPopover?: HTMLElement\n    urlKey?: string\n    urlData?: TUrlData\n    urlIsMedia?: boolean\n    toolbarPosition?: TPosition\n}\n\ntype TStateOffset = {\n    start: number\n    end: number\n}\n\nconst styles = ({ spacing, typography, palette }: Theme) => createStyles({\n    root: {\n    },\n    container: {\n        margin: spacing(1, 0, 0, 0),\n        position: \"relative\",\n        fontFamily: typography.body1.fontFamily,\n        fontSize: typography.body1.fontSize,\n        '& figure': {\n            margin: 0\n        }\n    },\n    inheritFontSize: {\n        fontSize: \"inherit\"\n    },\n    editor: {\n    },\n    editorContainer: {\n        margin: spacing(1, 0, 0, 0),\n        cursor: \"text\",\n        width: \"100%\",\n        padding: spacing(0, 0, 1, 0)\n    },\n    editorReadOnly: {\n        borderBottom: \"none\"\n    },\n    error: {\n        borderBottom: \"2px solid red\"\n    },\n    hidePlaceholder: {\n        display: \"none\"\n    },\n    placeHolder: {\n        color: palette.grey[600],\n        position: \"absolute\",\n        outline: \"none\"\n    },\n    linkPopover: {\n        padding: spacing(2, 2, 2, 2)\n    },\n    linkTextField: {\n        width: \"100%\"\n    },\n    anchorLink: {\n    },\n    toolbar: {\n    },\n    inlineToolbar: {\n        maxWidth: \"180px\",\n        position: \"absolute\",\n        padding: \"5px\",\n        zIndex: 10\n    }\n})\n\nconst blockRenderMap = Immutable.Map({\n    'blockquote': {\n        element: \"blockquote\",\n        wrapper: <Blockquote />\n    },\n    'code-block': {\n        element: \"pre\",\n        wrapper: <CodeBlock />\n    }\n})\nconst styleRenderMap: DraftStyleMap = {\n    'STRIKETHROUGH': {\n        textDecoration: \"line-through\"\n    },\n    'HIGHLIGHT': {\n        backgroundColor: \"yellow\"\n    }\n}\n\nconst { hasCommandModifier } = KeyBindingUtil\nconst autocompleteMinSearchCharCount = 2\nconst lineHeight = 26\nconst defaultInlineToolbarControls = [\"bold\", \"italic\", \"underline\", \"clear\"]\n\nconst findLinkEntities = (contentBlock: any, callback: any, contentState: any) => {\n    contentBlock.findEntityRanges(\n        (character: any) => {\n            const entityKey = character.getEntity()\n            return (\n                entityKey !== null &&\n                contentState.getEntity(entityKey).getType() === 'LINK'\n            )\n        },\n        callback\n    )\n}\n\nconst findDecoWithRegex = (regex: RegExp, contentBlock: any, callback: any) => {\n    const text = contentBlock.getText()\n    let matchArr, start\n    while ((matchArr = regex.exec(text)) !== null) {\n        start = matchArr.index\n        callback(start, start + matchArr[0].length)\n    }\n}\n\nconst useEditorState = (props: IMUIRichTextEditorProps) => {\n    const decorators: DraftDecorator[] = [\n        {\n            strategy: findLinkEntities,\n            component: Link,\n        }\n    ]\n    if (props.decorators) {\n        props.decorators.forEach(deco => decorators.push({\n            strategy: (contentBlock: any, callback: any) => {\n                findDecoWithRegex(deco.regex, contentBlock, callback)\n            },\n            component: deco.component\n        }))\n    }\n    const decorator = new CompositeDecorator(decorators)\n    const defaultValue = props.defaultValue || props.value\n    return (defaultValue)\n        ? EditorState.createWithContent(convertFromRaw(JSON.parse(defaultValue)), decorator)\n        : EditorState.createEmpty(decorator)\n}\n\nconst MUIRichTextEditor: RefForwardingComponent<TMUIRichTextEditorRef, IMUIRichTextEditorProps> = (props, ref) => {\n    const { classes, controls, customControls } = props\n\n    const [state, setState] = useState<TMUIRichTextEditorState>({})\n    const [focus, setFocus] = useState(false)\n    const [searchTerm, setSearchTerm] = useState(\"\")\n    const [selectedIndex, setSelectedIndex] = useState<number>(0)\n    const [editorState, setEditorState] = useState(() => useEditorState(props))\n    const [focusMediaKey, setFocusMediaKey] = useState(\"\")\n\n    const editorRef = useRef<Editor>(null)\n    const editorId = props.id || \"mui-rte\"\n    const toolbarPositionRef = useRef<TPosition | undefined>(undefined)\n    const editorStateRef = useRef<EditorState | null>(editorState)\n    const autocompleteRef = useRef<TAutocompleteStrategy | undefined>(undefined)\n    const autocompleteSelectionStateRef = useRef<SelectionState | undefined>(undefined)\n    const autocompletePositionRef = useRef<TPosition | undefined>(undefined)\n    const autocompleteLimit = props.autocomplete ? props.autocomplete.suggestLimit || 5 : 5\n    const isFirstFocus = useRef(true)\n    const customBlockMapRef = useRef<DraftBlockRenderMap | undefined>(undefined)\n    const customStyleMapRef = useRef<DraftStyleMap | undefined>(undefined)\n    const isFocusedWithMouse = useRef(false)\n    const selectionRef = useRef<TStateOffset>({\n        start: 0,\n        end: 0\n    })\n\n    /**\n     * Exposed methods\n     */\n    useImperativeHandle(ref, () => ({\n        focus: () => {\n            handleFocus()\n        },\n        save: () => {\n            handleSave()\n        },\n        insertAtomicBlock: (name: string, data: any) => {\n            handleInsertAtomicBlockSync(name, data)\n        },\n        insertAtomicBlockSync: (name: string, data: any) => {\n            handleInsertAtomicBlockSync(name, data)\n        },\n        insertAtomicBlockAsync: (name: string, promise: Promise<TAsyncAtomicBlockResponse>, placeholder?: string) => {\n            handleInsertAtomicBlockAsync(name, promise, placeholder)\n        }\n    }))\n\n    useEffect(() => {\n        const editorState = useEditorState(props)\n        setEditorState(editorState)\n        toggleMouseUpListener(true)\n        return () => {\n            toggleMouseUpListener()\n        }\n    }, [props.value, props.defaultValue])\n\n    useEffect(() => {\n        if (props.onChange) {\n            props.onChange(editorState)\n        }\n        editorStateRef.current = editorState\n    }, [editorState])\n\n    useEffect(() => {\n        toolbarPositionRef.current = state.toolbarPosition\n    }, [state.toolbarPosition])\n\n    useEffect(() => {\n        if (searchTerm.length < autocompleteMinSearchCharCount) {\n            setSelectedIndex(0)\n        }\n    }, [searchTerm])\n\n    const clearSearch = () => {\n        setSearchTerm(\"\")\n        autocompletePositionRef.current = undefined\n        autocompleteSelectionStateRef.current = undefined\n    }\n\n    const handleMouseUp = (event: any) => {\n        const nodeName = event.target.nodeName\n        clearSearch()\n        if (nodeName === \"IMG\" || nodeName === \"VIDEO\") {\n            return\n        }\n        setTimeout(() => {\n            const selection = editorStateRef.current!.getSelection()\n            if (selection.isCollapsed() || (toolbarPositionRef !== undefined &&\n                selectionRef.current.start === selection.getStartOffset() &&\n                selectionRef.current.end === selection.getEndOffset())) {\n                const selectionInfo = getSelectionInfo(editorStateRef.current!)\n                if (selectionInfo.entityType === \"IMAGE\") {\n                    focusMedia(selectionInfo.block)\n                    return\n                }\n                setState({\n                    ...state,\n                    toolbarPosition: undefined\n                })\n                return\n            }\n\n            selectionRef.current = {\n                start: selection.getStartOffset(),\n                end: selection.getEndOffset()\n            }\n\n            const editor: HTMLElement = (editorRef.current as any)?.editor\n            if (!editor) {\n                return\n            }\n            const { editorRect, selectionRect } = getEditorBounds(editor)\n            if (!selectionRect) {\n                return\n            }\n            const position = {\n                top: editor.offsetTop - 48 + (selectionRect.top - editorRect.top),\n                left: editor.offsetLeft + (selectionRect.left - editorRect.left)\n            }\n            setState({\n                ...state,\n                toolbarPosition: position\n            })\n        }, 1)\n    }\n\n    const findAutocompleteStrategy = (chars: string): TAutocompleteStrategy | undefined => {\n        if (!props.autocomplete) {\n            return undefined\n        }\n        const acArray = props.autocomplete.strategies.filter(ac => ac.triggerChar === chars)\n        if (acArray.length) {\n            return acArray[0]\n        }\n        return undefined\n    }\n\n    const updateAutocompletePosition = () => {\n        const editor: HTMLElement = (editorRef.current as any)?.editor\n        if (!editor) {\n            return\n        }\n        const { editorRect, selectionRect } = getEditorBounds(editor)\n        const line = getLineNumber(editorState)\n        const top = selectionRect ? selectionRect.top : editorRect.top + (lineHeight * line)\n        const left = selectionRect ? selectionRect.left : editorRect.left\n        const position = {\n            top: editor.offsetTop + (top - editorRect.top) + lineHeight,\n            left: editor.offsetLeft + (left - editorRect.left)\n        }\n        if (!autocompleteSelectionStateRef.current) {\n            autocompleteSelectionStateRef.current = editorStateRef.current!.getSelection()\n        }\n        autocompletePositionRef.current = position\n    }\n\n    const insertAutocompleteSuggestionAsAtomicBlock = (name: string, selection: SelectionState, value: any) => {\n        const block = atomicBlockExists(name, props.customControls)\n        if (!block) {\n            return\n        }\n        const contentState = Modifier.removeRange(editorStateRef.current!.getCurrentContent(),\n            selection,\n            \"forward\")\n        const newEditorState = EditorState.push(editorStateRef.current!, contentState, \"remove-range\")\n        const withAtomicBlock = insertAtomicBlock(newEditorState, name.toUpperCase(), {\n            value: value\n        }, {\n            selection: newEditorState.getCurrentContent().getSelectionAfter()\n        })\n        handleChange(withAtomicBlock)\n    }\n\n    const insertAutocompleteSuggestionAsText = (selection: SelectionState, value: string) => {\n        const currentContentState = editorState.getCurrentContent()\n        const entityKey = currentContentState.createEntity(\"AC_ITEM\", 'IMMUTABLE').getLastCreatedEntityKey()\n        const contentState = Modifier.replaceText(editorStateRef.current!.getCurrentContent(),\n            selection,\n            value,\n            editorStateRef.current!.getCurrentInlineStyle(),\n            entityKey)\n        const newEditorState = EditorState.push(editorStateRef.current!, contentState, \"insert-characters\")\n        if (autocompleteRef.current!.insertSpaceAfter === false) {\n            handleChange(newEditorState)\n        } else {\n            const addSpaceState = Modifier.insertText(newEditorState.getCurrentContent(),\n                newEditorState.getSelection(), \" \",\n                newEditorState.getCurrentInlineStyle())\n            handleChange(EditorState.push(newEditorState, addSpaceState, \"insert-characters\"))\n        }\n    }\n\n    const handleAutocompleteSelected = (index?: number) => {\n        const itemIndex = index || selectedIndex\n        const items = getAutocompleteItems()\n        if (items.length > itemIndex) {\n            const item = items[itemIndex]\n            const currentSelection = autocompleteSelectionStateRef.current!\n            const offset = currentSelection.getFocusOffset() + searchTerm.length + 1\n            const newSelection = currentSelection.merge({\n                'focusOffset': offset\n            })\n            if (autocompleteRef.current!.atomicBlockName) {\n                const name = autocompleteRef.current!.atomicBlockName\n                insertAutocompleteSuggestionAsAtomicBlock(name, newSelection as SelectionState, item.value)\n            } else {\n                insertAutocompleteSuggestionAsText(newSelection as SelectionState, item.value)\n            }\n        }\n        handleAutocompleteClosed()\n    }\n\n    const handleAutocompleteClosed = () => {\n        clearSearch()\n        setSelectedIndex(0)\n        refocus()\n    }\n\n    const getAutocompleteItems = (): TAutocompleteItem[] => {\n        if (searchTerm.length < autocompleteMinSearchCharCount) {\n            return []\n        }\n        return autocompleteRef.current!.items\n            .filter(item => (item.keys.filter(key => key.includes(searchTerm)).length > 0))\n            .splice(0, autocompleteLimit)\n    }\n\n    const handleChange = (state: EditorState) => {\n        setEditorState(state)\n    }\n\n    const handleBeforeInput = (chars: string, editorState: EditorState): DraftHandleValue => {\n        if (chars === \" \" && searchTerm.length) {\n            clearSearch()\n        } else if (autocompleteSelectionStateRef.current) {\n            setSearchTerm(searchTerm + chars)\n        } else {\n            const strategy = findAutocompleteStrategy(chars)\n            if (strategy) {\n                autocompleteRef.current = strategy\n                updateAutocompletePosition()\n            }\n        }\n        return isMaxLengthHandled(editorState, 1)\n    }\n\n    const handleEditorFocus = () => {\n        handleFocus()\n        if (isFocusedWithMouse.current === true) {\n            isFocusedWithMouse.current = false\n            return\n        }\n        const nextEditorState = EditorState.forceSelection(editorState, editorState.getSelection())\n        setTimeout(() => (setEditorState(EditorState.moveFocusToEnd(nextEditorState))), 0)\n    }\n\n    const handlePlaceholderFocus = () => {\n        if (isFirstFocus.current === false) {\n            focusEditor()\n            return\n        }\n        handleFocus()\n        isFirstFocus.current = false\n    }\n\n    const handleFocus = () => {\n        focusEditor()\n        if (props.onFocus) {\n            props.onFocus()\n        }\n    }\n\n    const focusEditor = () => {\n        setFocus(true)\n        setTimeout(() => editorRef.current?.focus(), 0)\n    }\n\n    const handleBlur = () => {\n        isFocusedWithMouse.current = false\n        setFocus(false)\n        if (props.onBlur) {\n            props.onBlur()\n        }\n\n        if (!state.anchorUrlPopover) {\n            setState({\n                ...state,\n                toolbarPosition: undefined\n            })\n        }\n    }\n\n    const handleMouseDown = () => {\n        isFocusedWithMouse.current = true\n    }\n\n    const handleClearFormat = () => {\n        if (customStyleMapRef.current === undefined) {\n            return\n        }\n        const withoutStyles = clearInlineStyles(editorState, customStyleMapRef.current)\n        const selectionInfo = getSelectionInfo(editorState)\n        const newEditorState = EditorState.push(editorState, withoutStyles, 'change-inline-style')\n        setEditorState(RichUtils.toggleBlockType(newEditorState, selectionInfo.blockType))\n    }\n\n    const handleSave = () => {\n        if (props.onSave) {\n            props.onSave(JSON.stringify(convertToRaw(editorState.getCurrentContent())))\n        }\n    }\n\n    const handleInsertAtomicBlockSync = (name: string, data: any) => {\n        const block = atomicBlockExists(name, props.customControls)\n        if (!block) {\n            return\n        }\n        const newEditorState = insertAtomicBlock(editorState, block.name.toUpperCase(), data, {\n            selection: editorState.getCurrentContent().getSelectionAfter()\n        })\n        updateStateForPopover(newEditorState)\n    }\n\n    const handleInsertAtomicBlockAsync = (name: string, promise: Promise<TAsyncAtomicBlockResponse>, placeholder?: string) => {\n        const selection = insertAsyncAtomicBlockPlaceholder(name, placeholder)\n        const offset = selection.getFocusOffset() + 1\n        const newSelection = selection.merge({\n            'focusOffset': offset\n        })\n\n        promise.then(response => {\n            const newEditorState = insertAtomicBlock(editorStateRef.current!, name, response.data, {\n                selection: newSelection\n            })\n            handleChange(newEditorState)\n        }).catch(error => {\n            if (error) {\n                return\n            }\n            const newContentState = Modifier.removeRange(editorStateRef.current!.getCurrentContent(),\n                newSelection as SelectionState, \"forward\")\n            handleChange(EditorState.push(editorStateRef.current!, newContentState, \"remove-range\"))\n        })\n    }\n\n    const insertAsyncAtomicBlockPlaceholder = (name: string, placeholder?: string): SelectionState => {\n        const placeholderName = placeholder || name + \"...\"\n        const currentContentState = editorStateRef.current!.getCurrentContent()\n        const entityKey = currentContentState.createEntity(\"ASYNC_ATOMICBLOCK\", 'IMMUTABLE').getLastCreatedEntityKey()\n        const contentState = Modifier.insertText(editorStateRef.current!.getCurrentContent(),\n            currentContentState.getSelectionAfter(),\n            placeholderName,\n            undefined,\n            entityKey)\n\n        const selection = currentContentState.getSelectionAfter()\n        const newEditorState = EditorState.push(editorStateRef.current!, contentState, \"insert-characters\")\n        handleChange(newEditorState)\n        return selection\n    }\n\n    const handleKeyCommand = (command: DraftEditorCommand | string, editorState: EditorState): DraftHandleValue => {\n        const newState = RichUtils.handleKeyCommand(editorState, command)\n        if (newState) {\n            handleChange(newState)\n            return \"handled\"\n        }\n        else {\n            if (command.includes(\"mui-autocomplete\")) {\n                if (command === \"mui-autocomplete-insert\") {\n                    handleAutocompleteSelected()\n                }\n                if (command === \"mui-autocomplete-end\") {\n                    handleAutocompleteClosed()\n                }\n                return \"handled\"\n            }\n            if (props.keyCommands) {\n                const keyCommand = props.keyCommands.find(comm => comm.name === command)\n                if (keyCommand) {\n                    const newState = keyCommand.callback(editorState)\n                    handleChange(newState)\n                    return \"handled\"\n                }\n            }\n        }\n        return \"not-handled\"\n    }\n\n    const handleCustomClick = (style: any, id: string) => {\n        if (!props.customControls) {\n            return\n        }\n        for (let control of props.customControls) {\n            if (control.name.toUpperCase() === style) {\n                if (control.onClick) {\n                    setTimeout(() => editorRef.current?.blur(), 0)\n                    const newState = control.onClick(editorState, control.name, document.getElementById(id))\n                    if (newState) {\n                        if (newState.getSelection().isCollapsed()) {\n                            setEditorState(newState)\n                        }\n                        else {\n                            updateStateForPopover(newState)\n                        }\n                    }\n                    else {\n                        if (!editorState.getSelection().isCollapsed()) {\n                            refocus()\n                        }\n                    }\n                }\n                break\n            }\n        }\n    }\n\n    const handleUndo = () => {\n        setEditorState(EditorState.undo(editorState))\n    }\n\n    const handleRedo = () => {\n        setEditorState(EditorState.redo(editorState))\n    }\n\n    const handlePrompt = (lastState: EditorState, type: \"link\" | \"media\", inlineMode?: boolean) => {\n        const selectionInfo = getSelectionInfo(lastState)\n        const contentState = lastState.getCurrentContent()\n        const linkKey = selectionInfo.linkKey\n        let data = undefined\n        if (linkKey) {\n            const linkInstance = contentState.getEntity(linkKey)\n            data = linkInstance.getData()\n        }\n        setState({\n            urlData: data,\n            urlKey: linkKey,\n            toolbarPosition: !inlineMode ? undefined : state.toolbarPosition,\n            anchorUrlPopover: !inlineMode ? document.getElementById(`${editorId}-${type}-control-button`)!\n                : document.getElementById(`${editorId}-${type}-control-button-toolbar`)!,\n            urlIsMedia: type === \"media\" ? true : undefined\n        })\n    }\n\n    const handlePromptForLink = (inlineMode?: boolean) => {\n        const selection = editorState.getSelection()\n\n        if (!selection.isCollapsed()) {\n            handlePrompt(editorState, \"link\", inlineMode)\n        }\n    }\n\n    const handlePromptForMedia = (inlineMode?: boolean, newState?: EditorState) => {\n        const lastState = newState || editorState\n        handlePrompt(lastState, \"media\", inlineMode)\n    }\n\n    const handleConfirmPrompt = (isMedia?: boolean, ...args: any) => {\n        if (isMedia) {\n            confirmMedia(...args)\n            return\n        }\n        confirmLink(...args)\n    }\n\n    const handleToolbarClick = (style: string, type: string, id: string, inlineMode?: boolean) => {\n        if (type === \"inline\") {\n            return toggleInlineStyle(style)\n        }\n        if (type === \"block\") {\n            return toggleBlockType(style)\n        }\n        switch (style) {\n            case \"UNDO\":\n                handleUndo()\n                break\n            case \"REDO\":\n                handleRedo()\n                break\n            case \"LINK\":\n                handlePromptForLink(inlineMode)\n                break\n            case \"IMAGE\":\n                handlePromptForMedia(inlineMode)\n                break\n            case \"clear\":\n                handleClearFormat()\n                break\n            case \"save\":\n                handleSave()\n                break\n            default:\n                handleCustomClick(style, id)\n        }\n    }\n\n    const handlePastedText = (text: string, _html: string | undefined, editorState: EditorState): DraftHandleValue => {\n        return isMaxLengthHandled(editorState, text.length)\n    }\n\n    const handleReturn = (_e: any, editorState: EditorState): DraftHandleValue => {\n        return isMaxLengthHandled(editorState, 1)\n    }\n\n    const isMaxLengthHandled = (editorState: EditorState, nextLength: number): DraftHandleValue => {\n        const currentLength = editorState.getCurrentContent().getPlainText('').length\n        return isGreaterThan(currentLength + nextLength, props.maxLength) ? \"handled\" : \"not-handled\"\n    }\n\n    const toggleMouseUpListener = (addAfter = false) => {\n        const editor: HTMLElement = (editorRef.current as any)?.editor\n        if (!editor) {\n            return\n        }\n        editor.removeEventListener(\"mouseup\", handleMouseUp)\n        if (addAfter) {\n            editor.addEventListener(\"mouseup\", handleMouseUp)\n        }\n    }\n\n    const removeLink = () => {\n        const selection = editorState.getSelection()\n        setEditorState(RichUtils.toggleLink(editorState, selection, null))\n    }\n\n    const confirmLink = (url?: string) => {\n        const { urlKey } = state\n        if (!url) {\n            if (urlKey) {\n                removeLink()\n            }\n            dismissPopover()\n            return\n        }\n\n        const contentState = editorState.getCurrentContent()\n        let replaceEditorState = editorState\n        const data = {\n            url: url,\n            className: classes.anchorLink\n        }\n\n        if (urlKey) {\n            contentState.replaceEntityData(urlKey, data)\n            replaceEditorState = EditorState.push(editorState, contentState, \"apply-entity\")\n        }\n        else {\n            const contentStateWithEntity = contentState.createEntity('LINK', 'MUTABLE', data)\n            const entityKey = contentStateWithEntity.getLastCreatedEntityKey()\n            const newEditorState = EditorState.set(editorState, { currentContent: contentStateWithEntity })\n            replaceEditorState = RichUtils.toggleLink(\n                newEditorState,\n                newEditorState.getSelection(),\n                entityKey)\n        }\n        updateStateForPopover(replaceEditorState)\n    }\n\n    const removeMedia = () => {\n        const blockKey = editorState.getSelection().getStartKey()\n        const contentState = editorState.getCurrentContent()\n        const mediaBlock = contentState.getBlockForKey(blockKey)\n        const newContentState = removeBlockFromMap(editorState, mediaBlock)\n        const newEditorState = EditorState.push(editorState, newContentState, \"remove-range\")\n        setEditorState(newEditorState)\n    }\n\n    const confirmMedia = (url?: string, width?: number, height?: number, alignment?: TAlignment, type?: TMediaType) => {\n        const { urlKey } = state\n        if (!url) {\n            if (urlKey) {\n                removeMedia()\n            }\n            dismissPopover()\n            return\n        }\n\n        const contentState = editorState.getCurrentContent()\n        const data = {\n            url: url,\n            width: width,\n            height: height,\n            alignment: alignment,\n            type: type\n        }\n\n        if (urlKey) {\n            contentState.replaceEntityData(urlKey, data)\n            const newEditorState = EditorState.push(editorState, contentState, \"apply-entity\")\n            updateStateForPopover(EditorState.forceSelection(newEditorState, newEditorState.getCurrentContent().getSelectionAfter()))\n        }\n        else {\n            const newEditorState = insertAtomicBlock(editorState, \"IMAGE\", data)\n            updateStateForPopover(EditorState.forceSelection(newEditorState, newEditorState.getCurrentContent().getSelectionAfter()))\n        }\n        setFocusMediaKey(\"\")\n    }\n\n    const updateStateForPopover = (editorState: EditorState) => {\n        setEditorState(editorState)\n        dismissPopover()\n    }\n\n    const dismissPopover = () => {\n        refocus()\n        setState({\n            ...state,\n            anchorUrlPopover: undefined,\n            urlKey: undefined,\n            urlIsMedia: undefined,\n            urlData: undefined\n        })\n    }\n\n    const refocus = () => {\n        setTimeout(() => editorRef.current?.blur(), 0)\n        setTimeout(() => editorRef.current?.focus(), 1)\n    }\n\n    const toggleBlockType = (blockType: string) => {\n        setEditorState(\n            RichUtils.toggleBlockType(\n                editorState,\n                blockType\n            )\n        )\n    }\n\n    const toggleInlineStyle = (inlineStyle: string) => {\n        setEditorState(\n            RichUtils.toggleInlineStyle(\n                editorState,\n                inlineStyle\n            )\n        )\n    }\n\n    const focusMedia = (block: ContentBlock) => {\n        const newSeletion = SelectionState.createEmpty(block.getKey())\n        const newEditorState = EditorState.forceSelection(editorStateRef.current!, newSeletion)\n        editorStateRef.current = newEditorState\n        setFocusMediaKey(block.getKey())\n        setEditorState(newEditorState)\n        handlePromptForMedia(false, newEditorState)\n    }\n\n    const getStyleMap = (): DraftStyleMap => {\n        if (customStyleMapRef.current === undefined) {\n            setupStyleMap()\n        }\n        return customStyleMapRef.current!\n    }\n\n    const setupStyleMap = () => {\n        const customStyleMap = JSON.parse(JSON.stringify(styleRenderMap))\n        props.customControls?.filter(control => control.type === \"inline\" && control.inlineStyle)\n            .forEach(control => {\n                customStyleMap[control.name.toUpperCase()] = control.inlineStyle\n            })\n        customStyleMapRef.current = customStyleMap\n    }\n\n    const getBlockMap = (): DraftBlockRenderMap => {\n        if (customBlockMapRef.current === undefined) {\n            setupBlockMap()\n        }\n        return customBlockMapRef.current!\n    }\n\n    const setupBlockMap = () => {\n        const customBlockMap: any = {}\n        props.customControls?.filter(control => control.type === \"block\" && control.blockWrapper)\n            .forEach(control => {\n                customBlockMap[control.name.toUpperCase()] = {\n                    element: \"div\",\n                    wrapper: control.blockWrapper\n                }\n            })\n        customBlockMapRef.current = DefaultDraftBlockRenderMap.merge(blockRenderMap, Immutable.Map(customBlockMap))\n    }\n\n    const blockRenderer = (contentBlock: ContentBlock) => {\n        const blockType = contentBlock.getType()\n        if (blockType === 'atomic') {\n            const contentState = editorState.getCurrentContent()\n            const entity = contentBlock.getEntityAt(0)\n            if (entity) {\n                const type = contentState.getEntity(entity).getType()\n                if (type === \"IMAGE\") {\n                    return {\n                        component: Media,\n                        editable: false,\n                        props: {\n                            onClick: focusMedia,\n                            readOnly: props.readOnly,\n                            focusKey: focusMediaKey\n                        }\n                    }\n                } else {\n                    const block = atomicBlockExists(type.toLowerCase(), props.customControls)\n                    if (block) {\n                        return {\n                            component: block.atomicComponent,\n                            editable: false,\n                            props: contentState.getEntity(contentBlock.getEntityAt(0)).getData()\n                        }\n                    }\n                }\n            }\n        }\n        return null\n    }\n\n    const styleRenderer = (style: any): React.CSSProperties => {\n        const customStyleMap = getStyleMap()\n        const styleNames = style.toJS()\n        return styleNames.reduce((styles: any, styleName: string) => {\n            styles = customStyleMap[styleName]\n            return styles\n        }, {})\n    }\n\n    const insertAtomicBlock = (editorState: EditorState, type: string, data: any, options?: any) => {\n        const contentState = editorState.getCurrentContent()\n        const contentStateWithEntity = contentState.createEntity(type, 'IMMUTABLE', data)\n        const entityKey = contentStateWithEntity.getLastCreatedEntityKey()\n        const newEditorStateRaw = EditorState.set(editorState, {\n            currentContent: contentStateWithEntity,\n            ...options\n        })\n        return AtomicBlockUtils.insertAtomicBlock(newEditorStateRaw, entityKey, ' ')\n    }\n\n    const getAutocompleteKeyEvent = (keyboardEvent: React.KeyboardEvent<{}>): string | null => {\n        const itemsLength = getAutocompleteItems().length\n        const limit = autocompleteLimit > itemsLength ? itemsLength : autocompleteLimit\n        switch (keyboardEvent.key) {\n            case \"ArrowDown\":\n                if ((selectedIndex === 0 && itemsLength === 1) || (selectedIndex + 1 === limit)) {\n                    setSelectedIndex(0)\n                } else {\n                    setSelectedIndex(selectedIndex + 1 < limit ? selectedIndex + 1 : selectedIndex)\n                }\n                return \"mui-autocomplete-navigate\"\n            case \"ArrowUp\":\n                if (selectedIndex) {\n                    setSelectedIndex(selectedIndex - 1)\n                } else {\n                    setSelectedIndex(limit - 1)\n                }\n                return \"mui-autocomplete-navigate\"\n            case \"Enter\":\n                return \"mui-autocomplete-insert\"\n            case \"Escape\":\n                return \"mui-autocomplete-end\"\n            default:\n                return null\n        }\n    }\n\n    const updateSearchTermForKeyBinding = (keyBinding: DraftEditorCommand | null) => {\n        const text = editorStateRef.current!.getCurrentContent().getLastBlock().getText()\n\n        if (keyBinding === \"backspace\"\n            && autocompleteRef.current\n            && text.substr(text.length - 1) === autocompleteRef.current.triggerChar) {\n            clearSearch()\n        } else if (autocompletePositionRef.current\n            && keyBinding === \"backspace\"\n            && searchTerm.length) {\n            setSearchTerm(searchTerm.substr(0, searchTerm.length - 1))\n        } else if (!autocompletePositionRef.current &&\n            (keyBinding === \"backspace\"\n                || keyBinding === \"split-block\")) {\n            clearSearch()\n        }\n    }\n\n    const keyBindingFn = (e: React.KeyboardEvent<{}>): string | null => {\n        if (hasCommandModifier(e) && props.keyCommands) {\n            const comm = props.keyCommands.find(comm => comm.key === e.keyCode)\n            if (comm) {\n                return comm.name\n            }\n        }\n        if (searchTerm) {\n            const autocompleteEvent = getAutocompleteKeyEvent(e)\n            if (autocompleteEvent) {\n                return autocompleteEvent\n            }\n        }\n        const keyBinding = getDefaultKeyBinding(e)\n        updateSearchTermForKeyBinding(keyBinding)\n\n        return keyBinding\n    }\n\n    const renderToolbar = props.toolbar === undefined || props.toolbar\n    const inlineToolbarControls = props.inlineToolbarControls || defaultInlineToolbarControls\n    const editable = props.readOnly === undefined || !props.readOnly\n    let className = \"\"\n    let placeholder: React.ReactElement | null = null\n    if (!focus) {\n        const contentState = editorState.getCurrentContent()\n        if (!contentState.hasText()) {\n            placeholder = (\n                <div\n                    className={classNames(classes.editorContainer, classes.placeHolder, {\n                        [classes.error]: props.error\n                    })}\n                    tabIndex={0}\n                    onFocus={handlePlaceholderFocus}\n                >\n                    {props.label || \"\"}\n                </div>\n            )\n            className = classes.hidePlaceholder\n        }\n    }\n\n    return (\n        <div id={`${editorId}-root`} className={classes.root}>\n            <div id={`${editorId}-container`} className={classNames(classes.container, {\n                [classes.inheritFontSize]: props.inheritFontSize\n            })}>\n                {props.autocomplete && autocompletePositionRef.current ?\n                    <Autocomplete\n                        items={getAutocompleteItems()}\n                        top={autocompletePositionRef.current!.top}\n                        left={autocompletePositionRef.current!.left}\n                        onClick={handleAutocompleteSelected}\n                        selectedIndex={selectedIndex}\n                    />\n                    : null}\n                {props.inlineToolbar && editable && state.toolbarPosition ?\n                    <Paper className={classes.inlineToolbar} style={{\n                        top: state.toolbarPosition.top,\n                        left: state.toolbarPosition.left\n                    }}>\n                        <Toolbar\n                            id={editorId}\n                            editorState={editorState}\n                            onClick={handleToolbarClick}\n                            controls={inlineToolbarControls}\n                            customControls={customControls}\n                            inlineMode={true}\n                            isActive={true}\n                        />\n                    </Paper>\n                    : null}\n                {renderToolbar ?\n                    <Toolbar\n                        id={editorId}\n                        editorState={editorState}\n                        onClick={handleToolbarClick}\n                        controls={controls}\n                        customControls={customControls}\n                        className={classes.toolbar}\n                        disabled={!editable}\n                        size={props.toolbarButtonSize}\n                        isActive={focus}\n                    />\n                    : null}\n                {placeholder}\n                <div id={`${editorId}-editor`} className={classes.editor}>\n                    <div id={`${editorId}-editor-container`} className={classNames(className, classes.editorContainer, {\n                        [classes.editorReadOnly]: !editable,\n                        [classes.error]: props.error\n                    })} onMouseDown={handleMouseDown} onBlur={handleBlur}>\n                        <Editor\n                            blockRenderMap={getBlockMap()}\n                            blockRendererFn={blockRenderer}\n                            customStyleFn={styleRenderer}\n                            editorState={editorState}\n                            onChange={handleChange}\n                            onFocus={handleEditorFocus}\n                            readOnly={props.readOnly}\n                            handleKeyCommand={handleKeyCommand}\n                            handleBeforeInput={handleBeforeInput}\n                            handlePastedText={handlePastedText}\n                            handleReturn={handleReturn}\n                            keyBindingFn={keyBindingFn}\n                            ref={editorRef}\n                            {...props.draftEditorProps}\n                        />\n                    </div>\n                </div>\n                {state.anchorUrlPopover ?\n                    <UrlPopover\n                        data={state.urlData}\n                        anchor={state.anchorUrlPopover}\n                        onConfirm={handleConfirmPrompt}\n                        isMedia={state.urlIsMedia}\n                    />\n                    : null}\n            </div>\n        </div>\n    )\n}\n\nexport default withStyles(styles, { withTheme: true, name: \"MUIRichTextEditor\" })(forwardRef(MUIRichTextEditor))\n"],"names":["React","Modifier","SelectionState","getVisibleSelectionRect","useState","useEffect","createStyles","withStyles","styles","Blockquote","CodeBlock","KeyBindingUtil","CompositeDecorator","EditorState","convertFromRaw","useRef","useImperativeHandle","RichUtils","convertToRaw","DefaultDraftBlockRenderMap","Media","AtomicBlockUtils","getDefaultKeyBinding","Autocomplete","Editor","UrlPopover","forwardRef"],"mappings":"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"}